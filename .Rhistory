) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability") +
annotation_scale(location = "br", # 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
annotation_north_arrow(location = "br",
which_north = "true",
pad_x = unit(0.55, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = c(0.15, 0.9),
plot.subtitle = element_markdown())
# Save the plot to your PC
ggsave(
"./ms_body/ms_figs/fig_7_biocontrol.png",
width = 10,
height = 12,
dpi = 600
)
# -----------------------------------------------------------------------------
# Script: 03 - Logistic regression
#            - Do MaxEnt scores correlate with higher insect establishment?
#
# AUTHOR: Guy F. Sutton
# AFFILIATION: Centre for Biological Control, Rhodes University, South Africa
# DATE MODIFIED: 03/02/2021
# CONTACT: g.sutton@ru.ac.za
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# Session setup
# -----------------------------------------------------------------------------
# Load required packages
if (!require("pacman"))
install.packages("pacman")
pacman::p_load(
tidyverse,
spocc,
ggmap,
maptools,
maps,
ggplot2,
scrubr,
mapr,
tidyr,
stringr,
rnaturalearth,
rnaturalearthdata,
rlang,
sf,
ggspatial,
raster,
here,
tidytext,
ggtext,
tidymodels,
themis,
ranger,
yardstick,
vip,
DHARMa,
rms
)
# Define function to calculate uncertainty in out-of-sample metrics
boot_val <- function(data, formula, ...) {
out <- list()
for (i in 1:500) {
df <- sample_n(data, nrow(data), replace = TRUE)
md <- glm(formula, data = df, family = binomial)
out[[i]] <- val.prob(predict(md, type = "response"),
as.numeric(df$established) - 1,
pl = FALSE) %>% round(3)
}
return(out)
}
# ----------------------------------------------------------------------------
# Evaluate performance of default settings model:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_default.asc")
# Import invaded-range GPS points
inv_data <- readr::read_csv("./data/data_clean/dasi_rubi_invaded_range_gps_clean.csv")
head(inv_data)
# Keep just the columns of interest
inv_clean <- inv_data %>%
dplyr::select(lon = lon_converted,
lat = lat_converted,
established) %>%
mutate(lat = lat * -1)
inv_clean
# Keep only the sites with establishment data
inv_clean <- inv_clean %>%
tidyr::drop_na(established)
# Extract the maxent scores for each site
clim_data <- raster::extract(clim_map,
inv_clean[, 1:2]) %>%
as.data.frame()
# Bind the maxent scores to the site data
clim_data <- dplyr::bind_cols(inv_clean, clim_data) %>%
dplyr::rename(clim_match = 4) %>%
tidyr::drop_na(clim_match) %>%
dplyr::mutate(establsihed = as.numeric(established))
head(clim_data)
# Run logistic regression
# - Regress insect establishment (1/0) as a function of
#   the MaxEnt climate matching score
# Have to store our data as an 'rms' object for the model to extract predictions later.
dd <- datadist(clim_data)
options(datadist = "dd")
# Fit model
mod_lrm_default <- lrm(established ~ clim_match,
data = clim_data,
x = FALSE,
y = FALSE)
print(mod_lrm_default)
?lrm
# -----------------------------------------------------------------------------
# Script: - Reproduce Figure 5
#
# AUTHOR: Guy F. Sutton
# AFFILIATION: Centre for Biological Control, Rhodes University, South Africa
# DATE MODIFIED: 03/02/2021
# CONTACT: g.sutton@ru.ac.za
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# Session setup
# -----------------------------------------------------------------------------
# Load packages
if (!require("pacman"))
install.packages("pacman")
pacman::p_load(
tidyverse,
spocc,
ggmap,
maptools,
maps,
ggplot2,
scrubr,
mapr,
tidyr,
stringr,
patchwork,
rnaturalearth,
rnaturalearthdata,
rlang,
sf,
ggspatial,
raster,
here,
tidytext,
ggtext,
tidymodels,
themis,
ranger,
viridis,
yardstick,
vip,
DHARMa,
rms
)
# Set the theme for the figures
theme_set(
theme_classic() +
theme(
panel.border = element_rect(colour = "black", fill = NA),
axis.text = element_text(colour = "black"),
axis.title.x = element_text(margin = unit(c(2, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 4, 0, 0), "mm")),
legend.position = "none"
)
)
# Set the theme for the maps
theme_opts <- list(
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_rect(fill = 'white', colour = NA),
plot.background = element_rect(),
axis.line = element_blank(),
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
plot.title = element_text(colour = "black"),
panel.border = element_rect(fill = NA),
legend.key = element_blank()
)
)
# ----------------------------------------------------------------------------
# Plot default map:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_default.asc")
# Get map of South Africa to project our model over
world <- rnaturalearth::ne_countries(scale = "medium",
returnclass = "sf") %>%
dplyr::filter(name == "South Africa")
# Mask MaxEnt projection to South Africa
predictMaxent <- raster::mask(clim_map, world)
# MaxEnt scores are in a raster layer above, but we need the MaxEnt scores
# in a dataframe.
rcp <- raster::rasterToPoints(predictMaxent)
rcpdf <- base::data.frame(rcp)
colnames(rcpdf) <- c("Longitude", "Latitude", "Species")
# Plot map
final_map_default <- ggplot(data = rcpdf) +
# Plot MaxEnt scores
geom_tile(data = rcpdf, aes(x = Longitude,
y = Latitude,
fill = Species)) +
# Colour each grid cell according the MaxEnt scores
scale_fill_viridis(limits = c(0, 1),
breaks = seq(0, 1, 0.25)) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability",
subtitle = "(a) Default MaxEnt settings") +
# Add scale bar to bottom-right of map
annotation_scale(location = "br",
# 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
# Add north arrow
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.1, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering
) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = "right") +
# Change appearance of the legend
guides(fill = guide_colorbar(ticks = FALSE),
colour = guide_legend(order = 2))
final_map_default
# ----------------------------------------------------------------------------
# Plot AUCtest map:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_AUCtest.asc")
# Mask MaxEnt projection to South Africa
predictMaxent <- raster::mask(clim_map, world)
# MaxEnt scores are in a raster layer above, but we need the MaxEnt scores
# in a dataframe.
rcp <- raster::rasterToPoints(predictMaxent)
rcpdf <- base::data.frame(rcp)
colnames(rcpdf) <- c("Longitude", "Latitude", "Species")
# Plot map
final_map_AUCtest <- ggplot(data = rcpdf) +
# Plot MaxEnt scores
geom_tile(data = rcpdf, aes(x = Longitude,
y = Latitude,
fill = Species)) +
# Colour each grid cell according the MaxEnt scores
scale_fill_viridis(limits = c(0, 1),
breaks = seq(0, 1, 0.25)) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability",
subtitle = "(b) AUC<sub>*test*</sub>") +
# Add scale bar to bottom-right of map
annotation_scale(location = "br",
# 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
# Add north arrow
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.1, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering
) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = "right",
plot.subtitle = element_markdown()) +
# Change appearance of the legend
guides(fill = guide_colorbar(ticks = FALSE),
colour = guide_legend(order = 2))
final_map_AUCtest
# ----------------------------------------------------------------------------
# Plot AUCdiff map:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_AUCdiff.asc")
# Mask MaxEnt projection to South Africa
predictMaxent <- raster::mask(clim_map, world)
# MaxEnt scores are in a raster layer above, but we need the MaxEnt scores
# in a dataframe.
rcp <- raster::rasterToPoints(predictMaxent)
rcpdf <- base::data.frame(rcp)
colnames(rcpdf) <- c("Longitude", "Latitude", "Species")
# Plot map
final_map_AUCdiff <- ggplot(data = rcpdf) +
# Plot MaxEnt scores
geom_tile(data = rcpdf, aes(x = Longitude,
y = Latitude,
fill = Species)) +
# Colour each grid cell according the MaxEnt scores
scale_fill_viridis(limits = c(0, 1),
breaks = seq(0, 1, 0.25)) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability",
subtitle = "(c) AUC<sub>*diff*</sub>") +
# Add scale bar to bottom-right of map
annotation_scale(location = "br",
# 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
# Add north arrow
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.1, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering
) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = "right",
plot.subtitle = element_markdown()) +
# Change appearance of the legend
guides(fill = guide_colorbar(ticks = FALSE),
colour = guide_legend(order = 2))
final_map_AUCdiff
# ----------------------------------------------------------------------------
# Plot OR10 map:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_OR10.asc")
# Mask MaxEnt projection to South Africa
predictMaxent <- raster::mask(clim_map, world)
# MaxEnt scores are in a raster layer above, but we need the MaxEnt scores
# in a dataframe.
rcp <- raster::rasterToPoints(predictMaxent)
rcpdf <- base::data.frame(rcp)
colnames(rcpdf) <- c("Longitude", "Latitude", "Species")
# Plot map
final_map_OR10 <- ggplot(data = rcpdf) +
# Plot MaxEnt scores
geom_tile(data = rcpdf, aes(x = Longitude,
y = Latitude,
fill = Species)) +
# Colour each grid cell according the MaxEnt scores
scale_fill_viridis(limits = c(0, 1),
breaks = seq(0, 1, 0.25)) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability",
subtitle = "(d) OR<sub>10</sub>") +
# Add scale bar to bottom-right of map
annotation_scale(location = "br",
# 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
# Add north arrow
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.1, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering
) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = "right",
plot.subtitle = element_markdown()) +
# Change appearance of the legend
guides(fill = guide_colorbar(ticks = FALSE),
colour = guide_legend(order = 2))
final_map_OR10
# ----------------------------------------------------------------------------
# Plot AICc map:
# ----------------------------------------------------------------------------
# Import Maxent prediction raster
clim_map <- raster::raster("./models/rasters/raster_AICc.asc")
# Mask MaxEnt projection to South Africa
predictMaxent <- raster::mask(clim_map, world)
# MaxEnt scores are in a raster layer above, but we need the MaxEnt scores
# in a dataframe.
rcp <- raster::rasterToPoints(predictMaxent)
rcpdf <- base::data.frame(rcp)
colnames(rcpdf) <- c("Longitude", "Latitude", "Species")
# Plot map
final_map_AICc <- ggplot(data = rcpdf) +
# Plot MaxEnt scores
geom_tile(data = rcpdf, aes(x = Longitude,
y = Latitude,
fill = Species)) +
# Colour each grid cell according the MaxEnt scores
scale_fill_viridis(limits = c(0, 1),
breaks = seq(0, 1, 0.25)) +
# Plot the shapefile of Africa
geom_sf(data = world, fill = NA) +
# Crops Africa to just the geographic extent of South Africa
coord_sf(
xlim = c(15, 33.5),
ylim = c(-35,-21.5),
crs = 4326,
expand = FALSE
) +
# Create title for the legend
labs(fill = "Climatic suitability",
subtitle = "(e) AIC<sub>c</sub>") +
# Add scale bar to bottom-right of map
annotation_scale(location = "br",
# 'br' = bottom right
style = "ticks",
width_hint = 0.2) +
# Add north arrow
annotation_north_arrow(
location = "br",
which_north = "true",
pad_x = unit(0.1, "in"),
pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering
) +
# Apply the theme for the map we defined above.
theme_opts +
theme(legend.position = "right",
plot.subtitle = element_markdown()) +
# Change appearance of the legend
guides(fill = guide_colorbar(ticks = FALSE),
colour = guide_legend(order = 2))
final_map_AICc
# ----------------------------------------------------------------------------
# Save all the maps as one figure
# ----------------------------------------------------------------------------
# Put all the maps together in one figure
all_maps <- final_map_default +
final_map_AUCtest +
final_map_AUCdiff +
final_map_OR10 +
final_map_AICc +
plot_layout(nrow = 2, byrow = TRUE)
all_maps
# Save the plot to your PC
ggsave(
"./ms_body/ms_figs/fig_x_maxent_maps.png",
width = 10, # 18
height = 8, # 12
dpi = 600
)
# Save the plot to your PC
ggsave(
"./ms_body/ms_figs/fig_x_maxent_maps.png",
width = 24, # 18
height = 16, # 12
dpi = 600
)
# Save the plot to your PC
ggsave(
"./ms_body/ms_figs/fig_x_maxent_maps.png",
width = 30, # 18
height = 22, # 12
dpi = 600
)
# Save the plot to your PC
ggsave(
"./ms_body/ms_figs/fig_5_maxent_maps.png",
width = 24, # 18
height = 16, # 12
dpi = 600
)
